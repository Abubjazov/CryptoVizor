{"version":3,"sources":["interfaces/TCoin.ts","components/AppMenu/AppMenu.tsx","components/AppMenu/index.ts","components/InputGroup/InputGroup.tsx","components/InputGroup/index.ts","store/CoinsStore.ts","store/RateExchangerStore.ts","store/RootStore.ts","store/useStores.ts","components/RateExchanger/RateExchanger.tsx","components/RateExchanger/index.ts","components/RateExchanger/hooks.ts","components/CryptoTable/CryptoTable.tsx","components/CryptoTable/index.ts","components/CryptoTable/hooks.ts","components/CryptoCurrency/index.ts","components/CryptoCurrency/CryptoCurrency.tsx","components/CryptoCurrency/hooks.ts","App/index.ts","App/App.tsx","index.tsx"],"names":["EStatus","classes","root","menuButton","title","toolbar","StyledFade","styled","Fade","theme","flexGrow","marginRight","spacing","AppMenu","in","timeout","AppBar","position","elevation","sx","marginTop","background","Toolbar","IconButton","edge","className","color","aria-label","size","Typography","variant","Button","inputGroup","input","formControl","selectEmpty","coinWrapper","Root","height","display","justifyContent","alignItems","width","InputGroup","coins","selectValue","setSelectValue","inputValue","setInputValue","readOnly","TextField","id","type","label","value","onChange","event","parseFloat","target","inputProps","step","min","InputProps","FormControl","InputLabel","Select","labelId","child","fullWidth","map","row","MenuItem","key","src","process","imageUrl","alt","style","fullName","CoinsStore","_coins","_status","WAITING","setStatusWaiting","setCoins","loadCoinsData","LOADING","Axios","get","then","response","data","Data","coin","obj","name","price","volume24Hour","Changepcthour","CoinInfo","Id","Name","FullName","ImageUrl","RAW","USD","PRICE","VOLUME24HOUR","CHANGEPCTHOUR","catch","ERROR","makeAutoObservable","this","RateExchangerStore","_selectValue1","_inputValue1","_selectValue2","_inputValue2","setFirstCoin","setFirstValue","setSecondCoin","setSecondValue","coinsStore","rateExchangerStore","RootContext","createContext","useStores","useContext","rateContainer","iconButton","gridAutoColumns","gridAutoRows","justifySelf","RateExchanger","useObserver","useCoinsStore","firstCoin","firstValue","secondCoin","secondValue","useRateExchangerStore","useEffect","fValue","fId","sId","fPrice","filter","item","sPrice","multiplier","toFixed","exchange","Paper","padding","onClick","tmpCoin","tableContainer","tableHead","colorСellGreen","colorСellRed","StyledTableContainer","TableContainer","palette","primary","main","backgroundColor","CryptoTable","tableRowClickHandler","elementId","currentTarget","dataset","component","Table","TableHead","TableRow","TableCell","align","TableBody","data-id","hover","role","tabIndex","scope","Math","round","CryptoCurrency","status","useState","time","setTime","timer","setTimeout","clearTimeout","paddingTop","marginLeft","App","createTheme","purple","secondary","grey","StyledEngineProvider","injectFirst","ThemeProvider","Container","maxWidth","Grid","container","xs","md","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.c22dcdc1.chunk.js","sourcesContent":["export type TCoin = {\n  id: string;\n  name: string;\n  fullName: string;\n  imageUrl: string;\n  price: number;\n  volume24Hour: number;\n  Changepcthour: number;\n};\n\nexport enum EStatus {\n  WAITING = \"waiting\",\n  LOADING = \"loading\",\n  ERROR = \"error\",\n}\n","import React, { FC } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  AppBar,\n  Button,\n  Fade,\n  IconButton,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nconst PREFIX = \"AppMenu\";\n\nconst classes = {\n  root: `${PREFIX}-root`,\n  menuButton: `${PREFIX}-menuButton`,\n  title: `${PREFIX}-title`,\n  toolbar: `${PREFIX}-toolbar`,\n};\n\nconst StyledFade = styled(Fade)(({ theme }) => ({\n  [`& .${classes.root}`]: {\n    flexGrow: 1,\n  },\n\n  [`& .${classes.menuButton}`]: {\n    marginRight: theme.spacing(2),\n  },\n\n  [`& .${classes.title}`]: {\n    flexGrow: 1,\n  },\n}));\n\nconst AppMenu: FC = () => {\n  return (\n    <StyledFade in timeout={1000}>\n      <AppBar\n        position=\"static\"\n        elevation={1}\n        sx={{ marginTop: \"5px\", background: \"#FFFFFF\" }}\n      >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"primary\"\n            aria-label=\"menu\"\n            size=\"large\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography color=\"primary\" variant=\"h6\" className={classes.title}>\n            CryptoVizor\n          </Typography>\n          <Button color=\"primary\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </StyledFade>\n  );\n};\n\nexport default AppMenu;\n","import AppMenu from \"./AppMenu\";\n\nexport default AppMenu;\n","import React, { FC } from \"react\";\nimport { styled } from '@mui/material/styles';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n} from \"@mui/material\";\n\nimport { TCoin } from \"../../interfaces/TCoin\";\n\nconst PREFIX = 'InputGroup';\n\nconst classes = {\n  inputGroup: `${PREFIX}-inputGroup`,\n  input: `${PREFIX}-input`,\n  formControl: `${PREFIX}-formControl`,\n  selectEmpty: `${PREFIX}-selectEmpty`,\n  coinWrapper: `${PREFIX}-coinWrapper`\n};\n\nconst Root = styled('div')((\n  {\n    theme\n  }\n) => ({\n  [`&.${classes.inputGroup}`]: {\n    height: \"40px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n\n  [`& .${classes.input}`]: { width: \"45%\" },\n\n  [`& .${classes.formControl}`]: {\n    width: \"45%\",\n  },\n\n  [`& .${classes.selectEmpty}`]: {\n    marginTop: theme.spacing(2),\n  },\n\n  [`& .${classes.coinWrapper}`]: {\n    display: \"flex\",\n    alignItems: \"center\",\n  }\n}));\n\ninterface InputGroupProps {\n  coins: TCoin[] | null;\n  selectValue: string;\n  setSelectValue: (value: string) => void;\n  inputValue: number;\n  setInputValue: (value: number) => void;\n  readOnly?: boolean;\n}\n\nconst InputGroup: FC<InputGroupProps> = ({\n  coins,\n  selectValue,\n  setSelectValue,\n  inputValue,\n  setInputValue,\n  readOnly = false,\n}) => {\n\n\n  const handleSelectChange = (\n    event: SelectChangeEvent<string>,\n    child: React.ReactNode\n  ) => {\n    setSelectValue(event.target.value as string);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const inputValue = parseFloat(event.target.value as string);\n\n    setInputValue(inputValue);\n  };\n\n  return (\n    <Root className={classes.inputGroup}>\n      <TextField\n        variant=\"standard\"\n        id=\"cryptoInput\"\n        type=\"number\"\n        label=\"Сумма\"\n        className={classes.input}\n        value={inputValue}\n        onChange={handleInputChange}\n        inputProps={{ type: \"number\", step: \"any\", min: 0 }}\n        InputProps={{\n          readOnly: readOnly,\n        }} />\n\n      <FormControl variant=\"standard\" className={classes.formControl}>\n        <InputLabel id=\"select-label\">Валюта</InputLabel>\n        <Select\n          variant=\"standard\"\n          labelId=\"select-label\"\n          id=\"crYptoSelect\"\n          value={selectValue}\n          onChange={handleSelectChange}\n          fullWidth>\n          {coins &&\n            coins.map((row) => (\n              <MenuItem key={row.id} value={row.id}>\n                <div className={classes.coinWrapper}>\n                  <img\n                    src={process.env.REACT_APP_ICON_BASE_URL + row.imageUrl}\n                    alt=\"\"\n                    style={{ height: \"25px\", marginRight: \"5px\" }}\n                  />\n                  {row.fullName}\n                </div>\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </Root>\n  );\n};\n\nexport default InputGroup;\n","import InputGroup from \"./InputGroup\";\n\nexport default InputGroup;\n","import { makeAutoObservable } from \"mobx\";\nimport Axios from \"axios\";\n\nimport { EStatus, TCoin } from \"../interfaces/TCoin\";\n\nclass CoinsStore {\n  _coins: TCoin[] | null = null;\n  _status: EStatus = EStatus.WAITING;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get coins(): TCoin[] | null {\n    return this._coins;\n  }\n\n  get status(): EStatus {\n    return this._status;\n  }\n\n  setStatusWaiting = (): void => {\n    this._status = EStatus.WAITING;\n  };\n\n  setCoins = (coins: TCoin[]): void => {\n    this._coins = coins;\n  };\n\n  loadCoinsData = (): void => {\n    this._status = EStatus.LOADING;\n\n    Axios.get(process.env.REACT_APP_BASE_URL + \"\")\n      .then((response) => {\n        const coins: TCoin[] = response.data.Data.map((coin: any) => {\n          const obj: TCoin = {\n            id: \"\",\n            name: \"\",\n            fullName: \"\",\n            imageUrl: \"\",\n            price: 0,\n            volume24Hour: 0,\n            Changepcthour: 0,\n          };\n\n          obj.id = coin.CoinInfo.Id;\n          obj.name = coin.CoinInfo.Name;\n          obj.fullName = coin.CoinInfo.FullName;\n          obj.imageUrl = coin.CoinInfo.ImageUrl;\n          obj.price = coin.RAW.USD.PRICE;\n          obj.volume24Hour = coin.RAW.USD.VOLUME24HOUR;\n          obj.Changepcthour = coin.RAW.USD.CHANGEPCTHOUR;\n\n          return obj;\n        });\n\n        this.setStatusWaiting();\n        this.setCoins(coins);\n      })\n      .catch(() => {\n        this._status = EStatus.ERROR;\n      });\n  };\n}\n\nexport default CoinsStore;\n","import { makeAutoObservable } from \"mobx\";\n\nclass RateExchangerStore {\n  private _selectValue1: string = \"\";\n  private _inputValue1: number = 0;\n\n  private _selectValue2: string = \"\";\n  private _inputValue2: number = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get firstCoin(): string {\n    return this._selectValue1;\n  }\n  get firstValue(): number {\n    return this._inputValue1;\n  }\n  setFirstCoin = (value: string): void => {\n    this._selectValue1 = value;\n  };\n  setFirstValue = (value: number): void => {\n    this._inputValue1 = value;\n  };\n\n  get secondCoin(): string {\n    return this._selectValue2;\n  }\n  get secondValue(): number {\n    return this._inputValue2;\n  }\n  setSecondCoin = (value: string): void => {\n    this._selectValue2 = value;\n  };\n  setSecondValue = (value: number): void => {\n    this._inputValue2 = value;\n  };\n}\n\nexport default RateExchangerStore;\n","import { createContext } from \"react\";\n\nimport CoinsStore from \"../store/CoinsStore\";\nimport RateExchangerStore from \"./RateExchangerStore\";\n\nconst coinsStore = new CoinsStore();\nconst rateExchangerStore = new RateExchangerStore();\n\nexport const RootContext = createContext({\n  coinsStore,\n  rateExchangerStore,\n});\n","import { useContext } from \"react\";\n\nimport { RootContext } from \"./RootStore\";\n\nconst useStores = () => useContext(RootContext);\n\nexport default useStores;\n","import React, { FC, useEffect } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { Fade, IconButton, Paper, Typography } from \"@mui/material\";\nimport ImportExportIcon from \"@mui/icons-material/ImportExport\";\n\nimport InputGroup from \"../InputGroup\";\nimport { useCoinsStore, useRateExchangerStore } from \"./hooks\";\nimport { TCoin } from \"../../interfaces/TCoin\";\n\nconst PREFIX = \"RateExchanger\";\n\nconst classes = {\n  rateContainer: `${PREFIX}-rateContainer`,\n  iconButton: `${PREFIX}-iconButton`,\n};\n\nconst StyledFade = styled(Fade)(({ theme }) => ({\n  [`& .${classes.rateContainer}`]: {\n    display: \"grid\",\n    gridAutoColumns: \"1fr\",\n    gridAutoRows: \"80px 60px 30px\",\n    alignItems: \"end\",\n  },\n\n  [`& .${classes.iconButton}`]: {\n    justifySelf: \"center\",\n  },\n}));\n\nconst RateExchanger: FC = () => {\n  const { coins } = useCoinsStore();\n  const {\n    firstCoin,\n    firstValue,\n    setFirstCoin,\n    setFirstValue,\n\n    secondCoin,\n    secondValue,\n    setSecondCoin,\n    setSecondValue,\n  } = useRateExchangerStore();\n\n  const changeButtonClickHandler = () => {\n    const tmpCoin = firstCoin;\n\n    setFirstCoin(secondCoin);\n    setSecondCoin(tmpCoin);\n  };\n\n  const exchange = (\n    coins: TCoin[] | null,\n    fValue: number,\n    fId: string,\n    sId: string,\n    setSecondValue: (value: number) => void\n  ): void => {\n    if (coins && fId && sId)\n      if (coins !== null) {\n        const fPrice = coins.filter((item) => item.id === fId)[0].price;\n        const sPrice = coins.filter((item) => item.id === sId)[0].price;\n        const multiplier = parseFloat((fPrice / sPrice).toFixed(5));\n\n        setSecondValue(parseFloat((fValue * multiplier).toFixed(5)));\n      }\n  };\n\n  useEffect(() => {\n    exchange(coins, firstValue, firstCoin, secondCoin, setSecondValue);\n    // eslint-disable-next-line\n  }, [firstCoin, firstValue, secondCoin, secondValue]);\n\n  return (\n    <StyledFade in timeout={1000}>\n      <Paper elevation={1} style={{ height: \"300px\", padding: \"13px\" }}>\n        <Typography variant=\"h5\">Калькулятор</Typography>\n        <div className={classes.rateContainer}>\n          <InputGroup\n            coins={coins}\n            selectValue={firstCoin}\n            setSelectValue={setFirstCoin}\n            inputValue={firstValue}\n            setInputValue={setFirstValue}\n          />\n          <IconButton\n            className={classes.iconButton}\n            color=\"primary\"\n            aria-label=\"change\"\n            onClick={changeButtonClickHandler}\n            size=\"large\"\n          >\n            <ImportExportIcon />\n          </IconButton>\n          <InputGroup\n            coins={coins}\n            selectValue={secondCoin}\n            setSelectValue={setSecondCoin}\n            inputValue={secondValue}\n            setInputValue={setSecondValue}\n            readOnly\n          />\n        </div>\n      </Paper>\n    </StyledFade>\n  );\n};\n\nexport default RateExchanger;\n","import RateExchanger from \"./RateExchanger\";\n\nexport default RateExchanger;\n","import { useObserver } from \"mobx-react-lite\";\n\nimport useStores from \"../../store/useStores\";\n\nexport const useRateExchangerStore = () => {\n  const { rateExchangerStore } = useStores();\n\n  return useObserver(() => ({\n    firstCoin: rateExchangerStore.firstCoin,\n    firstValue: rateExchangerStore.firstValue,\n    setFirstCoin: rateExchangerStore.setFirstCoin,\n    setFirstValue: rateExchangerStore.setFirstValue,\n\n    secondCoin: rateExchangerStore.secondCoin,\n    secondValue: rateExchangerStore.secondValue,\n    setSecondCoin: rateExchangerStore.setSecondCoin,\n    setSecondValue: rateExchangerStore.setSecondValue,\n  }));\n};\n\nexport const useCoinsStore = () => {\n  const { coinsStore } = useStores();\n\n  return useObserver(() => ({\n    coins: coinsStore.coins,\n  }));\n};\n","import React, { FC } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\n\nimport { TCoin } from \"../../interfaces/TCoin\";\nimport { useRateExchangerStore } from \"./hooks\";\n\nconst PREFIX = \"CryptoTable\";\n\nconst classes = {\n  tableContainer: `${PREFIX}-tableContainer`,\n  tableHead: `${PREFIX}-tableHead`,\n  coinWrapper: `${PREFIX}-coinWrapper`,\n  colorСellGreen: `${PREFIX}-colorСellGreen`,\n  colorСellRed: `${PREFIX}-colorСellRed`,\n};\n\nconst StyledTableContainer = styled(TableContainer)(({ theme }) => ({\n  [`&.${classes.tableContainer}`]: {\n    marginTop: \"13px\",\n  },\n\n  [`& .${classes.tableHead}`]: {\n    color: theme.palette.primary.main,\n    backgroundColor: \"#e9e9e9\",\n  },\n\n  [`& .${classes.coinWrapper}`]: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  [`& .${classes.colorСellGreen}`]: {\n    backgroundColor: \"#d8ffc4\",\n  },\n\n  [`& .${classes.colorСellRed}`]: {\n    backgroundColor: \"#ffdada\",\n  },\n}));\n\ninterface CryptoTableProps {\n  coins: TCoin[] | null;\n}\n\nconst CryptoTable: FC<CryptoTableProps> = ({ coins }) => {\n  const { firstCoin, setFirstCoin, secondCoin, setSecondCoin } =\n    useRateExchangerStore();\n\n  const setCellColor = (value: number) => {\n    if (value > 0) {\n      return classes.colorСellGreen;\n    }\n    if (value < 0) {\n      return classes.colorСellRed;\n    }\n  };\n\n  const tableRowClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n    const elementId = event.currentTarget.dataset.id;\n\n    if (!firstCoin) elementId && setFirstCoin(elementId);\n    if (firstCoin && !secondCoin) elementId && setSecondCoin(elementId);\n  };\n\n  return (\n    <StyledTableContainer className={classes.tableContainer}>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"crypto table\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                className={classes.tableHead}\n                align=\"center\"\n                size=\"small\"\n              >\n                Криптовалюта\n              </TableCell>\n              <TableCell\n                className={classes.tableHead}\n                align=\"center\"\n                size=\"small\"\n              >\n                Цена $\n              </TableCell>\n              <TableCell\n                className={classes.tableHead}\n                align=\"center\"\n                size=\"small\"\n              >\n                Куплено за 24 часа\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {coins &&\n              coins.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-id={row.id}\n                  hover\n                  role=\"checkbox\"\n                  tabIndex={-1}\n                  onClick={tableRowClickHandler}\n                >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    align=\"center\"\n                    size=\"small\"\n                  >\n                    <div className={classes.coinWrapper}>\n                      <img\n                        src={process.env.REACT_APP_ICON_BASE_URL + row.imageUrl}\n                        alt=\"\"\n                        style={{ height: \"31px\", marginRight: \"5px\" }}\n                      />\n                      {row.fullName}\n                    </div>\n                  </TableCell>\n                  <TableCell\n                    className={setCellColor(row.Changepcthour)}\n                    align=\"center\"\n                    size=\"small\"\n                  >\n                    {Math.round(row.price)}\n                  </TableCell>\n                  <TableCell align=\"center\" size=\"small\">\n                    {Math.round(row.volume24Hour)}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </StyledTableContainer>\n  );\n};\n\nexport default CryptoTable;\n","import CryptoTable from \"./CryptoTable\";\n\nexport default CryptoTable;\n","import { useObserver } from \"mobx-react-lite\";\n\nimport useStores from \"../../store/useStores\";\n\nexport const useRateExchangerStore = () => {\n  const { rateExchangerStore } = useStores();\n\n  return useObserver(() => ({\n    firstCoin: rateExchangerStore.firstCoin,\n    firstValue: rateExchangerStore.firstValue,\n    setFirstCoin: rateExchangerStore.setFirstCoin,\n    setFirstValue: rateExchangerStore.setFirstValue,\n\n    secondCoin: rateExchangerStore.secondCoin,\n    secondValue: rateExchangerStore.secondValue,\n    setSecondCoin: rateExchangerStore.setSecondCoin,\n    setSecondValue: rateExchangerStore.setSecondValue,\n  }));\n};\n","import CryptoCurrency from \"./CryptoCurrency\";\n\nexport default CryptoCurrency;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Fade, Paper, Typography } from \"@mui/material\";\n\nimport CryptoTable from \"../CryptoTable\";\nimport { useCoinsStore } from \"./hooks\";\n\nconst CryptoCurrency: FC = () => {\n  const { coins, loadCoinsData } = useCoinsStore();\n\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTime(time + 1);\n    }, 30000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [time]);\n\n  useEffect(() => {\n    loadCoinsData();\n    // eslint-disable-next-line\n  }, [time]);\n\n  return (\n    <Fade in timeout={1000}>\n      <Paper elevation={1} style={{ height: \"auto\", paddingTop: \"13px\" }}>\n        <Typography style={{ marginLeft: \"13px\" }} variant=\"h5\">\n          Курсы криптовалют\n        </Typography>\n        <CryptoTable coins={coins} />\n      </Paper>\n    </Fade>\n  );\n};\n\nexport default CryptoCurrency;\n","import { useObserver } from \"mobx-react-lite\";\n\nimport useStores from \"../../store/useStores\";\n\nexport const useCoinsStore = () => {\n  const { coinsStore } = useStores();\n\n  return useObserver(() => ({\n    coins: coinsStore.coins,\n    status: coinsStore.status,\n    setStatusWaiting: coinsStore.setStatusWaiting,\n    loadCoinsData: coinsStore.loadCoinsData,\n  }));\n};\n","import App from \"./App\";\n\nexport default App;\n","import React, { FC } from \"react\";\nimport {\n  Container,\n  createTheme,\n  Grid,\n  ThemeProvider,\n  StyledEngineProvider,\n} from \"@mui/material\";\n\nimport AppMenu from \"../components/AppMenu\";\nimport RateExchanger from \"../components/RateExchanger\";\nimport CryptoCurrency from \"../components/CryptoCurrency\";\nimport { grey, purple } from \"@mui/material/colors\";\n\nconst App: FC = () => {\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: purple[500],\n      },\n      secondary: {\n        main: grey[100],\n      },\n    },\n  });\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <AppMenu />\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={1} style={{ marginTop: \"10px\" }}>\n            <Grid item xs={12} md={5}>\n              <RateExchanger />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <CryptoCurrency />\n            </Grid>\n          </Grid>\n        </Container>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container!);\nroot.render(<App />);\n"],"sourceRoot":""}